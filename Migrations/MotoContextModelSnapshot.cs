// <auto-generated />
using System;
using CP2_BackEndMottu_DotNet.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CP2_BackEndMottu_DotNet.Migrations
{
    [DbContext(typeof(MotoContext))]
    partial class MotoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CP2_BackEndMottu_DotNet.Domain.Entity.Condicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.HasKey("Id");

                    b.ToTable("Condicao", (string)null);
                });

            modelBuilder.Entity("CP2_BackEndMottu_DotNet.Domain.Entity.LocalizacaoUWB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<decimal>("CoordenadaX")
                        .HasColumnType("NUMBER(10,6)")
                        .HasColumnName("LATITUDE");

                    b.Property<decimal>("CoordenadaY")
                        .HasColumnType("NUMBER(10,6)")
                        .HasColumnName("LONGITUDE");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP")
                        .HasColumnName("TIMESTAMP");

                    b.Property<Guid>("MotoId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("MOTO_ID");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.ToTable("Localizacoes", (string)null);
                });

            modelBuilder.Entity("CP2_BackEndMottu_DotNet.Domain.Entity.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)");

                    b.Property<Guid>("CondicaoId")
                        .HasColumnType("RAW(16)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)");

                    b.HasKey("Id");

                    b.HasIndex("CondicaoId");

                    b.ToTable("Moto", (string)null);
                });

            modelBuilder.Entity("CP2_BackEndMottu_DotNet.Domain.Entity.LocalizacaoUWB", b =>
                {
                    b.HasOne("CP2_BackEndMottu_DotNet.Domain.Entity.Moto", "Moto")
                        .WithMany("Localizacoes")
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("CP2_BackEndMottu_DotNet.Domain.Entity.Moto", b =>
                {
                    b.HasOne("CP2_BackEndMottu_DotNet.Domain.Entity.Condicao", "Condicao")
                        .WithMany()
                        .HasForeignKey("CondicaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condicao");
                });

            modelBuilder.Entity("CP2_BackEndMottu_DotNet.Domain.Entity.Moto", b =>
                {
                    b.Navigation("Localizacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
